/*
// final, const 키워드를 사용한 상수 선언
*/
/* 상수도 변수와 마찬가지로 데이터가 저장되는 메모리 공간의 이름으로
* 상수에 저장할 데이터 타입과 함께 선언해야 하며 아래 코드와 같이
* 데이터 타입 앞에 final 또는 const 예약어를 사용해 상수를 선언한다.
* 변수는 프로그램 중에 값이 변경될 수 있지만 상수는 한 번 값이 지정되면
* 프로그램이 실행되는 동안 그 값을 변경할 수 없다.
**//*

int add(int a, int b) {
  return a + b;
}
void main() {
// final을 변수의 타입 앞에 붙여서 상수를 선언할 수 있으며 상수는
// 한 번 값이 정해지면 프로그램이 실행되는 동안 그 값을 변경할 수 없다.
  final String name = "홍길동";
//name = "이순신"; //오류 발생
// 다음과 같이 변수의 타입 앞에 const를 사용해 상수를 선언할 수도 있다.
// const를 사용하면 빌드타임(컴파일 될 때) 상수로 만들어 지고 final를
// 사용하면 런타임(실행될 때) 상수로 만들어 진다.
  const String grade = "1";
// grade = "3";
// 코드가 실행되는 시간에 값이 확정되면 final를 사용
  final int sum1 = add(100, 200);
  print(sum1);
// 코드가 실행되기 전에 값이 확정되면 const를 사용
// 아래는 코드가 실행되는 시간에 add() 함수의 반환 값을 받아서
// 상수 값이 결정되기 때문에 const를 사용하면 오류가 발생한다.
// const int sum2 = add(10, 20);
//print(sum2);
}
*/

// var, dynamic 키워드를 사용한 변수 선언
void main() {
// var로 변수를 선언하면 값이 할당될 때 자동으로 자료 형(Data Type)을 추론하며
// 컴파일 될 때 추론된 타입으로 var이 치환된다.
  var name = 'Dart';
  print(name);
// 변수는 프로그램 실행 중에 값이 변경될 수 있다.
  name = "플러터";
  print(name);
// var로 선언된 변수는 타입을 한 번 추론하면 추론된 타입이 고정된다.
// 위에서 name에 문자열을 저장했기 때문에 자동으로 String 타입의
// 변수로 추론되기 때문에 정수 타입의 값을 저장할 수 없어서 에러가 발생 한다.
//name = 1;
// dynamic으로 선언된 변수 또한 var과 마찬가지로 값이 할당 될 때 테이터
// 타입을 추론하지만 타입이 고정되지 않아서 다른 타입의 값을 저장할 수 있다.
  dynamic grade = 10;
  print(grade);
  grade = '학년';
  print(grade);
}